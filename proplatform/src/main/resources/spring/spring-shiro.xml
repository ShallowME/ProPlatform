<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <description>apache shiro配置</description>

    <import resource="classpath:spring/spring-redis.xml"/>

    <!--加密方式-->
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5" />
        <property name="hashIterations" value="2" />
        <property name="storedCredentialsHexEncoded" value="true" />
    </bean>

    <bean id="authenticator" class="com.skyworth.utils.shiro.CustomizedModularRealmAuthenticator">
        <property name="authenticationStrategy">
            <bean class="org.apache.shiro.authc.pam.AtLeastOneSuccessfulStrategy"/>
        </property>
    </bean>

    <!--配置自定义realm-->
    <bean id="userSecurityRealm" class="com.skyworth.utils.shiro.UserSecurityRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher" />
        <property name="cachingEnabled" value="true" />
        <!-- 使用下面配置的缓存管理器 -->
        <property name="cacheManager" ref="redisCacheService" />
    </bean>

    <bean id="companySecurityRealm" class="com.skyworth.utils.shiro.CompanySecurityRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher" />
        <property name="cachingEnabled" value="true" />
        <!-- 使用下面配置的缓存管理器 -->
        <property name="cacheManager" ref="redisCacheService" />
    </bean>

    <!-- 会话管理 -->
    <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>

    <bean id="customSessionDAO" class="com.skyworth.utils.shiro.session.CustomSessionDAO"/>

    <bean id="userSessionService" class="com.skyworth.utils.shiro.session.UserSessionService"/>

    <bean id="companySessionService" class="com.skyworth.utils.shiro.session.CompanySessionService"/>

    <bean id="customSessionListener" class="com.skyworth.listener.CustomSessionListener"/>

    <bean id="baseShiroSessionRepository" class="com.skyworth.utils.shiro.session.BaseSessionRepository"/>

    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
    <!-- 相隔多久检查一次session的有效性   -->
    <property name="sessionValidationInterval" value="1800000"/>
    <!-- session 有效时间为半小时 （毫秒单位）-->
    <property name="globalSessionTimeout" value="1800000"/>
        <property name="sessionDAO" ref="customSessionDAO"/>

    <!-- session 监听，可以多个。 -->
    <property name="sessionListeners">
        <list>
            <ref bean="customSessionListener"/>
        </list>
    </property>
    <!-- 间隔多少时间检查，不配置是60分钟 -->
    <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
    <!-- 是否开启 检测，默认开启 -->
    <property name="sessionValidationSchedulerEnabled" value="true"/>
    <!-- 是否删除无效的，默认也是开启 -->
    <property name="deleteInvalidSessions" value="true"/>
    <!-- 会话Cookie模板 -->
    <property name="sessionIdCookie" ref="sessionIdCookie"/>
</bean>

    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list>
                <ref bean="userSecurityRealm"/>
                <ref bean="companySecurityRealm"/>
            </list>
        </property>

        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="redisCacheService"/>
    </bean>

    <!-- Shiro生命周期处理器 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!--开启shiro的注解-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor">
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!--shiro主拦截器链-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/loginForm"/>
        <property name="successUrl" value="/"/>
        <property name="unauthorizedUrl" value="/"/>

        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </map>
        </property>

        <property name="filterChainDefinitions">
            <value>
                /** = anon
                /registerForm = anon
                /loginForm = anon
                /authenticate = authc
                /remember = user
            </value>
        </property>
    </bean>

    <!--配置向cookie保存的数据-->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sessionId"/>
        <property name="path" value=""/>
        <property name="httpOnly" value="true"/>
        <property name="maxAge" value="-1"/>
    </bean>

    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username"/>
        <property name="passwordParam" value="password"/>
        <property name="loginUrl" value="/loginForm"/>
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="successUrl" value="/"/>
    </bean>

    <!-- 配置session的定时验证检测程序类，以让无效的session释放 -->
    <bean id="sessionValidationScheduler"
          class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <!-- 设置session的失效扫描间隔，单位为毫秒 -->
        <property name="sessionValidationInterval" value="100000"/>
        <!-- 随后还需要定义有一个会话管理器的程序类的引用 -->
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
</beans>